
include snippets/http-upgrade.conf;

{% if app_servers is defined and app_servers|length > 0 -%}
upstream backend_app {
  {% if app_servers_load_bal is defined -%}
  {{ app_servers_load_bal }};
  {%- endif %}
  {%- for serv in app_servers -%}
  server {{ serv.host | default('127.0.0.1') }}:{{ serv.port }} {%- if serv.load_bal is defined %} {{ serv.load_bal }} {%- endif %};
  {%- endfor %}

}
{%- endif %}


{% if api_servers is defined and api_servers|length > 0 -%}
upstream backend_api {
  {% if api_servers_load_bal is defined -%}
  {{ api_servers_load_bal }};
  {%- endif %}
  {%- for serv in api_servers -%}
  server {{ serv.host | default('127.0.0.1') }}:{{ serv.port }} {%- if serv.load_bal is defined %} {{ serv.load_bal }} {%- endif %};
  {%- endfor %}

}
{%- endif %}


server {
  listen                  80;
  server_name             {{ server_names|join(' ') }};
  access_log              /var/log/nginx/{{ host }}-http.log combined;
  error_log               /var/log/nginx/{{ host }}-http_error.log;

  include                 snippets/letsencrypt-challenge.conf;

  location / {
    rewrite               ^ https://$host$request_uri? permanent;
  }
}


server {
  listen                  443 ssl http2;
  listen                  [::]:443 ssl http2;

  server_name             {{ server_names|join(' ') }};
  ssl_certificate         /etc/pki/tls/lego/certificates/{{ host }}.crt;
  ssl_certificate_key     /etc/pki/tls/lego/certificates/{{ host }}.key;

  include                 snippets/https-options.conf;

  access_log              /var/log/nginx/{{ host }}.log combined;
  error_log               /var/log/nginx/{{ host }}_error.log;

  root                    /usr/share/nginx/html/{{ app_webroot | default(host) }};

  {% if host | regex_search('^\w+\.\w+$') -%}
  if ($host !~ ^www\.) {
    rewrite ^ $scheme://www.$host$request_uri permanent;
  }
  {%- endif %}

  {% if ((app_servers is defined and app_servers|length > 0) or app_webroot is defined) -%}
  location / {
    {% if app_servers is defined and app_servers|length > 0 -%}
    include               snippets/cors.conf;

    proxy_pass            http://backend_app/;
    proxy_read_timeout    300;
    proxy_connect_timeout 300;

    include               snippets/proxy-options.conf;
    {%- endif %}

    {% if app_webroot is defined -%}
    try_files             $uri $uri/ =404;
    {%- endif %}

  }
  {%- endif %}


  {% if api_servers is defined and api_servers|length > 0 -%}
  location /api {
    include               snippets/cors.conf;
    rewrite               /api(.*) /$1  break;

    proxy_pass            http://backend_api/;
    proxy_read_timeout    300;
    proxy_connect_timeout 300;

    include               snippets/proxy-options.conf;
  }
  {%- endif %}


  # deny access to .htaccess files, if Apache's document root
  # concurs with nginx's one
  location ~ /\.ht {
    deny                  all;
  }

  location @err_404 {
    try_files             /404.html =404;
  }

  location @err_maintenance {
    try_files             /maintenance.html =404;
  }

  location @err_50x {
    try_files             /50x.html =404;
  }

  # Add index.php to the list if you are using PHP
  index index.html index.htm;

  error_page 404 @err_404;
  error_page 500 502 503 504 @err_maintenance;

}
